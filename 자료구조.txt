꼭 필요한 자료구조 기초

탐색(Search): 많은 양의 데이터 중에서 원하는 데이터를 찾는 과정
프로그래밍에서는 그래프, 트리 등의 자료구조 안에서 탐색하는 문제를 자주 다룸
대표적인 탐색 알고리즘: DFS, BFS

자료구조(Data Structure): 데이터를 표현하고 관리하고 처리하기 위한 구조
삽입(Push): 데이터를 삽입
삭제(Pop): 데이터를 삭제
실제로 스택과 큐를 구현할 때는 삽입과 삭제 외에도 오버플로와 언더플로를 고민해야 함
오버플로(Overflow): 특정한 자료구조가 수용할 수 있는 데이터의 크기를 이미 가득 찬 상태에서 삽입 연산을 수행할 때 발생
언더플로(Underflow): 특정한 자료구조에서 데이터가 전혀 들어 있지 않은 샅애에서 삭제 연산을 수행하면 데이터가 전혀 없는 상태이므로 언더플로가 발생


스택(Stack)
스택은 박스 쌓기에 비유
선입후출(First In Last Out) 또는 후입선출(Last In First Out)구조
파이썬에서 스택을 이용할 때에는 별도의 라이브러리를 사용할 필요가 없음
기본 리스트에서 append, pop 메서드를 이용하면 스택 자료구조와 동일하게 동작


큐(Queue)
큐는 대기 줄에 비유
선입선출(First In First Out)구조
파이썬으로 큐를 구현할 때는 collections 모듈에서 제공하는 deque 자료구조를 활용


재귀함수(Recursive Function)
DFS와 BFS를 구현하려면 재귀 함수도 이해하고 있어야 함
재귀함수: 자기 자신을 다시 호출하는 함수
재귀 함수의 종료 조건: 재귀 함수를 문제 풀이에서 사용할 때는 재귀 함수가 언제 끝날지, 종료 조건을 꼭 명시해야 함
재귀 함수는 내부적으로 스택 자료구조와 동일하다는 것만 기억
재귀 함수는 반복문을 이용하는 것과 비교했을 때 더욱 간결한 형태임을 이해할 수 있음
